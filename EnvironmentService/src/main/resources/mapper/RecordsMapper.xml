<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.edu.xmu.haruki.environmentService.mapper.RecordsMapper">
    <select id="getAllRecords"
            resultType="com.edu.xmu.haruki.environmentService.model.record.Record">
        select * from record
        where 1=1
          <if test="recordVo!=null">
            <if test="recordVo.id !=null">
                and id=#{recordVo.id}
            </if>
            <if test="recordVo.sensorId!=null">
                and sensor_id=#{recordVo.sensorId}
            </if>
            <if test="recordVo.envId!=null">
                and env_id=#{recordVo.envId}
            </if>
            <if test="recordVo.sensorType!=null">
                and sensor_type=#{recordVo.sensorType}
            </if>
            <if test="recordVo.startTime!=null">
                and record_time &gt;= #{recordVo.startTime}
            </if>
            <if test="recordVo.endTime!=null">
                and record_time &lt;=#{recordVo.endTime}
            </if>
          </if>
        limit 10000
    </select>

    <select id="getRecordsBySensorId" resultType="com.edu.xmu.haruki.environmentService.model.record.Record">
        select * from record where sensor_id=#{sensorId} limit #{start},#{size}
    </select>

    <select id="getRecordsByEnvId" resultType="com.edu.xmu.haruki.environmentService.model.record.Record">
        select * from record where env_id=#{envId} limit #{start},#{size}
    </select>
    <select id="getRecordByEnvIdAndType"
            resultType="com.edu.xmu.haruki.environmentService.model.record.Record">
        select * from record where env_id=#{envId} and sensor_type=#{type} order by id desc limit 1
    </select>
    <select id="getExceptionRecords" resultType="com.edu.xmu.haruki.environmentService.model.record.Record">
        select * from exception_record
        where 1=1
        <if test="recordVo!=null">
            <if test="recordVo.id !=null">
                and id=#{recordVo.id}
            </if>
            <if test="recordVo.sensorId!=null">
                and sensor_id=#{recordVo.sensorId}
            </if>
            <if test="recordVo.envId!=null">
                and env_id=#{recordVo.envId}
            </if>
            <if test="recordVo.sensorType!=null">
                and sensor_type=#{recordVo.sensorType}
            </if>
            <if test="recordVo.startTime!=null">
                and record_time &gt;= #{recordVo.startTime}
            </if>
            <if test="recordVo.endTime!=null">
                and record_time &lt;=#{recordVo.endTime}
            </if>
        </if>
        limit 1000
    </select>

    <insert id="insertRecord" parameterType="com.edu.xmu.haruki.environmentService.model.record.Record">
        insert into record(sensor_id,env_id,sensor_type,sense_value,record_time)
        values(#{sensorId},#{envId},#{sensorType},#{senseValue},#{recordTime})
    </insert>

    <insert id="insertRecords">
        insert into record(sensor_id,env_id,sensor_type,sense_value,record_time)
        values
               <foreach collection="records" item="record" separator=",">
                   (#{record.sensorId},#{record.envId},#{record.sensorType},#{record.senseValue},#{record.recordTime})
               </foreach>

    </insert>
    <insert id="insertExceptionRecord"  parameterType="com.edu.xmu.haruki.environmentService.model.record.Record">
        insert into exception_record(sensor_id,env_id,sensor_type,sense_value,record_time)
        values(#{sensorId},#{envId},#{sensorType},#{senseValue},#{recordTime})
    </insert>

    <delete id="deleteRecord" parameterType="com.edu.xmu.haruki.environmentService.model.record.RecordVo">
        delete from record
        where 1=1
            <if test="id !=null">
                and id=#{id}
            </if>
            <if test="sensorId!=null">
                and sensor_id=#{sensorId}
            </if>
            <if test="envId!=null">
                and env_id=#{envId}
            </if>
            <if test="startTime!=null">
                and record_time &gt; = #{startTime}
            </if>
            <if test="endTime!=null">
                and record_time &lt; =#{endTime}
            </if>
    </delete>

    <delete id="deleteRecordById">
        delete from record
        where id=#{recordId}
    </delete>
    <delete id="deleteRecordsById">
        delete from record
        where id in
              <foreach collection="idList" item="id" separator="," open="(" close=")">
                  #{id}
              </foreach>
    </delete>
</mapper>
